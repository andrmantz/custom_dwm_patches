diff --git a/config.def.h b/config.def.h
index 1c0b587..0386b2e 100644
--- a/config.def.h
+++ b/config.def.h
@@ -66,6 +66,8 @@ static Key keys[] = {
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
+	{ MODKEY|ShiftMask,             XK_j,      focususedtag,   {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_k,      focususedtag,   {.i = -1 } },
 	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
 	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
diff --git a/dwm.c b/dwm.c
index 4465af1..369893d 100644
--- a/dwm.c
+++ b/dwm.c
@@ -169,6 +169,7 @@ static void focus(Client *c);
 static void focusin(XEvent *e);
 static void focusmon(const Arg *arg);
 static void focusstack(const Arg *arg);
+static void focususedtag(const Arg *arg);
 static int getrootptr(int *x, int *y);
 static long getstate(Window w);
 static int gettextprop(Window w, Atom atom, char *text, unsigned int size);
@@ -855,6 +856,58 @@ focusstack(const Arg *arg)
 	}
 }
 
+void 
+focususedtag(const Arg *arg){
+  Client *c;
+  unsigned int i, occ=0, currtag = 0;
+  Arg shiftit;
+  
+  if (!selmon->clients || !(arg->i == 1 || arg->i == -1))
+    return;
+
+  for (i=selmon->tagset[selmon->seltags]; i>1;i/=2)
+    currtag++;
+  
+  for (c = selmon->clients; c; c= c->next)
+    occ |= c->tags == 255 ? 0 : c->tags;
+
+  
+  if (arg->i == 1){
+    for (i=currtag + 1; i<LENGTH(tags); i++){
+      if (occ & 1 << i){
+        shiftit.ui = 1 << i;
+        view(&shiftit);
+        return ;
+      }  
+    }
+    
+    for (i=0; i<currtag;i++){
+      if (occ & 1 << i){
+        shiftit.ui = 1 << i;
+        view(&shiftit);
+        return ;
+      }      
+    }
+    return;
+  }
+
+  for (i=currtag-1; i>=0; i--){
+    if (occ & 1 << i){
+      shiftit.ui = 1 << i;
+      view(&shiftit);
+      return ;
+    }  
+  }
+    
+  for (i=LENGTH(tags) - 1; i>currtag;i--){
+    if (occ & 1 << i){
+      shiftit.ui = 1 << i;
+      view(&shiftit);
+      return ;
+    }      
+  }
+}
+
 Atom
 getatomprop(Client *c, Atom prop)
 {
